{"version":3,"sources":["pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["styles","container","display","flexDirection","height","width","justifyContent","alignItems","gap","background","badge","borderRadius","fontSize","fontWeight","color","padding","margin","float","activeBadge","card","textAlign","button","border","Home","useState","categories","setCategories","selectedCategory","setSelectedCategory","currentJoke","setCurrentJoke","isLoading","setIsLoading","fetchData","a","axios","get","then","res","data","getRandomByCategory","useEffect","document","title","style","src","icon_url","value","transition","map","category","onClick","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4QAyEMA,EAAS,CACbC,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,OAAQ,QACRC,MAAO,QACPC,eAAgB,SAChBC,WAAY,SACZC,IAAK,OACLC,WAAY,qCAEdC,MAAO,CACLC,aAAc,OACdC,SAAU,OACVC,WAAY,OACZC,MAAO,UACPV,OAAQ,OACRW,QAAS,SACTN,WAAY,YACZP,QAAS,OACTK,WAAY,SACZD,eAAgB,SAChBU,OAAQ,MACRC,MAAO,QAETC,YAAa,CACXT,WAAY,kDAEdU,KAAM,CACJJ,QAAS,WACTJ,aAAc,OACdN,MAAO,QACPS,MAAO,UACPM,UAAW,UAEbC,OAAQ,CACNZ,WAAY,UACZK,MAAO,QACPQ,OAAQ,OACRX,aAAc,OACdP,OAAQ,OACRW,QAAS,SACTF,WAAY,SAIDU,EApHF,WACX,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgDF,mBAAS,WAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAsCJ,qBAAtC,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,uCAAG,sBAAAC,EAAA,sDAChBC,IAAMC,IAAN,+CAAyDC,MAAK,SAACC,GAC7DZ,EAAcY,EAAIC,SAFJ,2CAAH,qDAMTC,EAAsB,WAC1BR,GAAa,GACbG,IACGC,IADH,2DAEwDT,IAErDU,MAAK,SAACC,GACLR,EAAeQ,EAAIC,MACnBP,GAAa,OAcnB,OAVAS,qBAAU,WACRC,SAASC,MAAQ,2BACjBV,IACAO,MACC,IAEHC,qBAAU,WACRD,MACC,CAACb,IAGF,sBAAKiB,MAAO5C,EAAOC,UAAnB,UACE,qBAAK4C,IAAG,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAaiB,WACvB,oBAAIF,MAAO5C,EAAOmB,KAAlB,SAAyBY,EAAY,eAAH,OAAUF,QAAV,IAAUA,OAAV,EAAUA,EAAakB,QAEzD,wBAAQH,MAAO,CAAE9B,MAAO,QAASkC,WAAY,SAA7C,6FAIA,qBAAKJ,MAAO,CAAEvC,MAAO,SAArB,SACGoB,EAAWwB,KAAI,SAACC,GACf,OACE,qBACEN,MACEjB,IAAqBuB,EAArB,2BACSlD,EAAOU,OAAUV,EAAOkB,aAC7BlB,EAAOU,MAEbyC,QAAS,kBAAMvB,EAAoBsB,IANrC,SAQGA,SAMT,wBACEN,MAAO5C,EAAOqB,OACd8B,QAAS,kBAAMX,KAFjB,mCCpDSY,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BX,M","file":"static/js/main.0b570e8c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Home = () => {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"history\");\n  const [currentJoke, setCurrentJoke] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchData = async () => {\n    axios.get(`https://api.chucknorris.io/jokes/categories`).then((res) => {\n      setCategories(res.data);\n    });\n  };\n\n  const getRandomByCategory = () => {\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.chucknorris.io/jokes/random?category=${selectedCategory}`\n      )\n      .then((res) => {\n        setCurrentJoke(res.data);\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    document.title = \"Chuck Norris - Fetch API\";\n    fetchData();\n    getRandomByCategory();\n  }, []);\n\n  useEffect(() => {\n    getRandomByCategory();\n  }, [selectedCategory]);\n\n  return (\n    <div style={styles.container}>\n      <img src={currentJoke?.icon_url} />\n      <h3 style={styles.card}>{isLoading ? \"ðŸ”„\" : currentJoke?.value}</h3>\n\n      <strong style={{ color: \"white\", transition: \"300ms\" }}>\n        Select an category bellow or try a random joke by clicking button. ðŸ¤˜\n      </strong>\n\n      <div style={{ width: \"448px\" }}>\n        {categories.map((category) => {\n          return (\n            <div\n              style={\n                selectedCategory === category\n                  ? { ...styles.badge, ...styles.activeBadge }\n                  : styles.badge\n              }\n              onClick={() => setSelectedCategory(category)}\n            >\n              {category}\n            </div>\n          );\n        })}\n      </div>\n\n      <button\n        style={styles.button}\n        onClick={() => getRandomByCategory(selectedCategory)}\n      >\n        try random âš¡\n      </button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    width: \"100vw\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: \"16px\",\n    background: \"radial-gradient(#a7d2ff, #573bb7)\",\n  },\n  badge: {\n    borderRadius: \"12px\",\n    fontSize: \"14px\",\n    fontWeight: \"bold\",\n    color: \"#573bb7\",\n    height: \"28px\",\n    padding: \"0 12px\",\n    background: \"#FFFFFF40\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"4px\",\n    float: \"left\",\n  },\n  activeBadge: {\n    background: \"linear-gradient(145deg, white, white, #a7d2ff)\",\n  },\n  card: {\n    padding: \"8px 24px\",\n    borderRadius: \"24px\",\n    width: \"400px\",\n    color: \"#573bb7\",\n    textAlign: \"center\",\n  },\n  button: {\n    background: \"#573bb7\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"50em\",\n    height: \"48px\",\n    padding: \"0 24px\",\n    fontWeight: \"bold\",\n  },\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}